# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
  *i*) ;;
  *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# formate date time
export HISTTIMEFORMAT="%m:%d:20%y:%T "

# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
  debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
  xterm-color) color_prompt=yes;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
  test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
  alias ls='ls -G'
  alias grep='grep --color=auto'
  alias fgrep='fgrep --color=auto'
  alias egrep='egrep --color=auto'
fi
alias ls='ls -G'
alias ll='ls -Gla'

#LS_COLORS='di=1;34:fi=0:ln=31:pi=5:so=5:bd=5:cd=5:or=31:mi=0:ex=1;32:*.rpm=90'
#export LS_COLORS

export CLICOLOR=1
export LSCOLORS=GxFxCxDxBxegedabagaced
#export LS_COLORS

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
  if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    # a case would tend to support setf rather than setaf.)
    color_prompt=yes
  else
    color_prompt=
  fi
fi

if [ "$color_prompt" = yes ]; then
  PS1='[${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u :\[\033[01;34m\]\w\[\033[00m\]]\n>> '
else
  PS1='[${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u :\[\033[01;34m\]\w\[\033[00m\]]\n>> '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
  xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u \w\a\]$PS1"
    ;;
  *)
    ;;
esac

# reset
#PS1='${debian_chroot:+($debian_chroot)}\u >> '

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'


# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
  . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# ENV
MHOME=/Users/rfoster

# TODO
##BOWER_HOME=$MHOME/Utils/node_modules/bower
##PATH=$PATH:/usr/share:$BOWER_HOME/bin:$MHOME/Utils/scripts:$MHOME/bin

PATH=$PATH:/usr/share:/usr/local/bin:/usr/include:$MHOME/Utils/scripts:$MHOME/bin

# AWS
export AWS_HOME=$HOME/Library/Python/3.7/bin
# export AWS_DEFAULT_PROFILE=profilename
PATH=/usr/local/Cellar/python3/3.7.4/bin:$AWS_HOME:$PATH
JAVA_HOME=/usr/bin:/usr/lib/jvm/java-7-openjdk-amd64
XSB_HOME=/home/rfoster/development/workspace/repository-manager/XSB/bin
CLASSPATH=.

# Development
DYLD_LIBRARY_PATH=/usr/loca/lin:/usr/lib
PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/lib/x86_64-linux-gnu

# Python path env
export PYTHONPATH=.
export PYTHONPATH=/usr/local/Cellar/python3/3.7.4/bin/python3.7:/usr/local/Cellar/python3/3.7.4/bin/python3.7/bin:$PYTHONPATH

# GOLANG
export GOPATH="${HOME}/.go"
export GOROOT="/usr/local/opt/go"
export PATH="$PATH:${GOPATH}/bin:${GOROOT}/bin"
# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.bash ] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.bash
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.bash ] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.bash


##
# NPM + NVM
# this is the root folder where all globally installed node packages will  go
##
export NPM_PACKAGES="/usr/local/npm_packages"
export NODE_PATH="$NPM_PACKAGES/lib/node_modules:$NODE_PATH"
export PATH="$NPM_PACKAGES/bin:$PATH" # add to PATH

export NVM_DIR=~/.nvm
export NVM_HOME=/usr/local/Cellar/nvm/0.35.3
npm config delete prefix
npm config set prefix $NVM_DIR/versions/node/v6.11.1
source $NVM_HOME/nvm.sh

export PATH="/usr/local/opt/python/libexec/bin:$PATH"

# GOLANG
export GOPATH=$HOME/development/workspace
export GOROOT=/usr/local/opt/go/libexec
export PATH=$PATH:$GOPATH/bin
export PATH=$PATH:$GOROOT/bin

# WORK LM
export LMPATH=$HOME/development/workspace/optools

# Additional script files
export MYSCRIPTS=$HOME/development/workspace/scripts
export PATH="$MYSCRIPTS:$PATH"
export PATH="/usr/local/Cellar/gdb/9.2/bin:$PATH:/usr/local/sbin"
